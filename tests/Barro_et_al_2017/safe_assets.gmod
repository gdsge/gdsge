% Parameters
parameters rho nu mu gamma1 gamma2;
period_length=0.25;         % a quarter
rho = 0.02*period_length;   % time preference
nu = 0.02*period_length;    % replacement rate
mu = 0.5;                   % population share of agent 1
P = 1-exp(-.04*period_length);   % disaster probability
B = -log(1-.32);            % disaster size
g = 0.025*period_length;    % growth rate
gamma1 = 3.1;
gamma2 = 50;

% Shocks
var_shock yn;
shock_num = 2;
shock_trans = [1-P,P;
               1-P,P];
yn = exp([g,g-B]);

% States
var_state omega1;
Ngrid = 501;
omega1 = [linspace(0,0.03,200),linspace(0.031,0.94,100),linspace(0.942,0.995,Ngrid-300)];

p = (1-nu)/(rho+nu);
pn = p;
Re_n = (1+pn)*yn/p;
% Endogenous variables, bounds, and initial values
var_policy shr_x1 Rf omega1n[2]
inbound shr_x1 0 1;             % agent 1's equity share
inbound Rf Re_n(2) Re_n(1);     % risk-free rate
inbound omega1n 0 1.02;         % state next period

% Other equilibrium variables
var_aux x1 x2 K1 b1 c1 c2 log_u1 log_u2 expectedRe;

% Implicit state transition functions
var_interp log_u1future log_u2future;
log_u1future = log_u1;
log_u2future = log_u2;
initial log_u1future (rho+nu)/(1+rho)*log((rho+nu)/(1+rho)) + (1-nu)/(1+rho)*log((1-nu)/(1+rho));
initial log_u2future (rho+nu)/(1+rho)*log((rho+nu)/(1+rho)) + (1-nu)/(1+rho)*log((1-nu)/(1+rho));

model;
  c1 = (rho+nu)/(1+rho);
  c2 = (rho+nu)/(1+rho);
  p = (1-nu)/(rho+nu);
  pn = p;

  log_u1n' = log_u1future'(omega1n');
  log_u2n' = log_u2future'(omega1n');
  u1n' = exp(log_u1n');
  u2n' = exp(log_u2n');

  Re_n' = (1+pn)*yn'/p;
  x1 = shr_x1*(Rf/(Rf - Re_n(2)));
 
  % Market clearing for bonds:
  b1 = omega1*(1-x1)*(1-c1)*(1+p);
  b2 = -b1;
  x2 = 1 - b2/((1-omega1)*(1-c2)*(1+p));
  K1 = x1*(1-c1)*omega1*(1+p)/p;
  K2 = x2*(1-c2)*(1-omega1)*(1+p)/p;

  R1n' = x1*Re_n' + (1-x1)*Rf;
  R2n' = x2*Re_n' + (1-x2)*Rf;

  % Agent 1's FOC wrt equity share:
  eq1 = GNDSGE_EXPECT{Re_n'*u1n'^(1-gamma1)*R1n'^(-gamma1)} / GNDSGE_EXPECT{Rf*u1n'^(1-gamma1)*R1n'^(-gamma1)} - 1;

  % Agent 2's FOC wrt equity share:
  log_u2n_R2n_gamma' = log_u2n'*(1-gamma2) - log(R2n')*gamma2;
  min_log_u2n_R2n_gamma = GNDSGE_MIN{log_u2n_R2n_gamma'};
  log_u2n_R2n_gamma_shifted' = log_u2n_R2n_gamma' - min_log_u2n_R2n_gamma;
  eq2 = GNDSGE_EXPECT{Re_n'*exp(log_u2n_R2n_gamma_shifted')} / GNDSGE_EXPECT{Rf*exp(log_u2n_R2n_gamma_shifted')} - 1;

  % Consistency for omega:
  omega_future_consis' = K1 - nu*(K1-mu) + (1-nu)*Rf*b1/(yn'*(1+pn)) - omega1n';

  % Update the utility functions:
  ucons1 = ((rho+nu)/(1+rho))*log(c1) + ((1-nu)/(1+rho))*log(1-c1);
  ucons2 = ((rho+nu)/(1+rho))*log(c2) + ((1-nu)/(1+rho))*log(1-c2);
  log_u1 = ucons1 + (1-nu)/(1+rho)/(1-gamma1)*log(GNDSGE_EXPECT{(R1n'*u1n')^(1-gamma1)});        
  log_u2 = ucons2 + (1-nu)/(1+rho)/(1-gamma2)*( log(GNDSGE_EXPECT{R2n'*exp(log_u2n_R2n_gamma_shifted')}) + min_log_u2n_R2n_gamma );

  expectedRe = GNDSGE_EXPECT{Re_n'};
       
  equations;
    eq1;
    eq2;
    omega_future_consis';
  end;
end;

simulate;
  num_periods = 10000;
  num_samples = 50;
  initial omega1 .67;
  initial shock 1;
  
  var_simu Rf K1 b1 expectedRe;

  omega1' = omega1n';
end;